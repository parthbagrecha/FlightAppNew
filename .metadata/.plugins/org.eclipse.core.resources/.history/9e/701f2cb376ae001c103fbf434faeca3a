package com.flightapp.service;

import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;

import com.flightapp.entity.User;
import com.flightapp.exceptions.RecordAlreadyPresentException;
import com.flightapp.iservice.IUserService;
import com.flightapp.respository.UserRepository;

public class UserService implements IUserService{
	
	@Autowired
	UserRepository userRepository;

	@Override
	public ResponseEntity<?> createUser(User newUser) {
		Optional<Users> findUserById = userDao.findById(newUser.getUserId());
		try {
			if (!findUserById.isPresent()) {
				userRepository.save(newUser);
				return new ResponseEntity<User>(newUser, HttpStatus.OK);
			} else
				throw new RecordAlreadyPresentException(
						"User with Id: " + newUser.getUserId() + " already exists!!");
		} catch (RecordAlreadyPresentException e) {

			return new ResponseEntity<>(HttpStatus.NOT_FOUND);
		}
	}

}
